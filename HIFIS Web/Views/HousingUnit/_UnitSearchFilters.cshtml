@model UnitSearchFilterViewModel

<form id="unitSearchFilterForm" class="form-horizontal">
    @Html.HiddenFor(model => model.PS)
    @Html.HiddenFor(model => model.PCID)
    @Html.HiddenFor(model => model.HPID)
    @Html.HiddenFor(model => model.IsActive)
    <div>
        <div class="row">
            @Html.HifisEditorFor(Model => Model.Add)
        </div>

        @* Housing types sought *@
        <div class="row">
            @Html.HifisListBoxFor(model => model.HTS, WebHelper.GetSelectListFromCache(CachedTableTypes.HIFIS_HouseTypes, Culture), new { @class = "fixedContainer", style = "width:250px;" })
        </div>

        @* Only this Service Provider *@
        <div class="row">
            @Html.HifisEditorFor(model=> model.SP, "YesNo")
        </div>

        @* Status Type ID *@
        <div class="row">
            @Html.HifisEditorFor(Model=> Model.STID, WebHelper.GetSelectListFromCache(CachedTableTypes.HIFIS_HouseStatusTypes, Culture))
        </div>

        @* Attribute types *@
        <div class="row">
            @Html.HifisListBoxFor(model => model.As, WebHelper.GetSelectListFromCache(CachedTableTypes.HIFIS_HouseAttributeTypes, Culture), new { @class = "wdth-strct-250" })
        </div>

        @if (ViewBag.IsGeoRegionEnabled)
        {
            <div class="row">
                @Html.HifisEditorFor(Model => Model.GeoID, WebHelper.GetSelectListFromCache(CachedTableTypes.HIFIS_GeoRegionTypes, Culture))
            </div>

            <div class="row">
                @Html.HifisEditorFor(Model => Model.City, Enumerable.Empty<SelectListItem>())
            </div>
        }

        <div class="row">
            @Html.HifisEditorFor(model => model.LL, Enumerable.Empty<SelectListItem>())
        </div>

        <div class="form-group">
            <div class="col-xs-11">
                <div class="btn-group">
                    <button type="button" id="filterListButton" class="filterButton pull-right">@Labels.ApplyFilters</button>
                </div>
            </div>
        </div>
    </div>
</form>
@using (Html.BeginScriptContext())
{
    Html.AddScriptBlock(
        @<script type="text/javascript">

            $(function () {
                $("#GeoID").trigger("select2:select");
            });

            $("#filterListButton").click(function () {
                if ($("#unitSearchFilterForm").valid()) {
                    var btn = $(this);

                    $('#unitListTable').DataTable().ajax.url('@Url.Content("~/HousingUnit/UnitSearchResultsJson/?")' + $("#unitSearchFilterForm").serialize() + '').load(null, false);
            
                    btn.attr("disabled", true);

                    if ($('#MapContainer').is(':visible')) {
                        updateMap();
                    }

                    $('#unitListTable').on('xhr.dt', function () {
                        btn.attr("disabled", false);
                        $('#filter-panel').trigger('close.wb-overlay');
                    });
                }
            });

            $("#GeoID").on("select2:select", function () {
                $.ajax({
                    url: '@Url.Action("AjaxGetGeoCityList", "Master")',
                    type: 'POST',
                    data: { "GeoID": $("#GeoID").val() }
                }).done(function (data) {
                    $('#City').find('option').remove();
                    $('#City').append(makeOptions(data.Result));
                    $('#City').trigger('change');
                    $('#City').closest('.form-group').show();
                });
            });


            $("#GeoID").on("select2:unselect", function () {
                $('#City').find('option').remove();
                $('#City').trigger('change');
                $('#City').closest('.form-group').hide();
            });

            function makeOptions(res) {
                var str = "";
                if (res.length > 0) {
                    for (i = 0; i < res.length; i++) {
                        str += '<option value="' + res[i].Value + '">' + res[i].Text + '</option>';
                    }
                }
                else {
                    str += '<option value="" disabled>@Labels.NoneToDisplay</option>';
                }
                return str;
            };
        </script>);
}
