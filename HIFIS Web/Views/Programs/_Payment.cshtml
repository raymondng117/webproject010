@model PaymentViewModel


<section id="Modal_EditServiceProgram" class="modal-dialog modal-content overlay-def">
    <header class="modal-header">
        <button type="button" class="mfp-close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h2 class="modal-title" id="myModalLabel">@ViewBag.PopupTitle</h2>
    </header>

    <div class="modal-body" style="background-color:white; min-height: 65px;">

        <form id="ProgramPaymentForm">
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.PaymentID)

            @Html.HiddenFor(model => model.ServiceID)
            @Html.HiddenFor(model => model.ProgramID)

            <div>
                @Html.HifisEditorFor(m => m.PaymentMethodTypeID, CachedTableTypes.HIFIS_PaymentMethodTypes, new { style = "min-wdith:200px !important;" })
            </div>
            <br />
            <br />

            <div>
                @Html.HifisEditorFor(m => m.PaymentDate)
            </div>
            <br />
            <br />

            <div>
                @Html.HifisEditorFor(m => m.Amount, "Money", new { @class = "moneyNegative wdth-strct-150" })
            </div>
            <br />
            <br />

            <div>
                @Html.HifisEditorFor(m => m.ReceiptNumber)
            </div>
            <br />
            <br />

            <div>
                @Html.HifisTextAreaFor(m => m.Comments)
            </div>
            <br />
            <br />
            <br />
            <br />

            <div style="border: 1px solid #e2e2e2; padding-left: 10px;">
                <span style="font-weight:700; font-size: 1.1em;">@Labels.PaymentPeriod</span>
                <br style="margin-bottom: 10px;" />

                <div style="float:left; margin-right: 15px;">
                    <label>@Labels.From</label>
                    @Html.HifisEditorFor(m => m.DateStart, "", null, true)
                </div>

                <div style="float:left;">
                    <label>@Labels.To</label>
                    @Html.HifisEditorFor(m => m.DateEnd, "", null, true)
                </div>
                <br />
                <br />
                <br />
            </div>

        </form>

    </div>

    <div class="modal-footer" style="background-color:white;">
        @if (ViewBag.IsAdd)
        {
        <button id="AddPaymentSaveButton" type="button" class="addButton">@Labels.Add</button>
        }
        else
        {
        <button id="EditPaymentSaveButton" type="button" class="saveButton">@Labels.Save</button>
        }

        <button id="ProgramPaymentCloseButton" type="button" class="cancelButton popup-modal-dismiss " data-dismiss="modal">@Labels.Close</button>
    </div>

</section>
<script type="text/javascript">
    init_hifis();
    autoWidthBoot('.modal-body');

    $("#ProgramPaymentForm").removeData("validator");
    $("#ProgramPaymentForm").removeData("unobtrusiveValidation");
    $.validator.unobtrusive.parse("#ProgramPaymentForm");

    $("#AddPaymentSaveButton").click(function () {

        if ($("#ProgramPaymentForm").valid()) {
            var data_serialized = $('#ProgramPaymentForm').serialize();

            $("#AddPaymentSaveButton").attr("disabled", true);

            $.ajax({

                url: "@Url.Content("~/Programs/AddPayment")",
                type: 'POST',
                dataType: 'json',
                data: data_serialized

            }).done(function (data) {
                $('#paymentListTable').DataTable().ajax.reload();
                $("#ProgramPaymentCloseButton").click();

                if (data.Success) {
                    displayNotification('success', null, '@Labels.DefaultDataSavedMessage');
                }
                else {
                    displayNotification('error', null, '@Labels.FailedToSave');
                }

                $("#AddPaymentSaveButton").attr("disabled", false);
            });
        }
    });

    $("#EditPaymentSaveButton").click(function () {

        if ($("#ProgramPaymentForm").valid()) {
            var data_serialized = $('#ProgramPaymentForm').serialize();

            $("#EditPaymentSaveButton").attr("disabled", true);

            $.ajax({

                url: "@Url.Content("~/Programs/EditPayment")",
                type: 'POST',
                dataType: 'json',
                data: data_serialized

            }).done(function (data) {
                $('#paymentListTable').DataTable().ajax.reload();
                $("#ProgramPaymentCloseButton").click();

                if (data.Success) {
                    displayNotification('success', null, '@Labels.DefaultDataSavedMessage');
                }
                else {
                    displayNotification('error', null, '@Labels.FailedToSave');
                }

                $("#EditPaymentSaveButton").attr("disabled", false);
            });
        }
    });
</script>
