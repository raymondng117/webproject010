@model Services_ServiceViewModel


<section id="Modal_NewItem" class="modal-dialog modal-content overlay-def">
    <header class="modal-header">
        <h2 class="modal-title">@Labels.AddNewService</h2>
    </header>

    <div class="modal-body">
        <form id="serviceForm" class="form-horizontal">
            @Html.Partial("_BaseHiddenFor")
            @Html.AntiForgeryToken()


            @Html.HiddenFor(model => model.ReadOnlyVitals.ClientID)
            @Html.HiddenFor(model => model.ServiceID)
            @Html.HiddenFor(model => model.ServiceTypeID)
            @Html.HiddenFor(model => model.DiversionID)
            @Html.HiddenFor(model => model.OrganizationID)
            @Html.HiddenFor(model => model.ClientIDs[0])
            @Html.HiddenFor(model => model.ReasonForServiceTypeID)
            @Html.HiddenFor(model => model.GoodsActivitiesID)

            @Html.HiddenFor(model => model.ReasonForGoodsActivityTypeID)

            @for (int i = 0; i < Model.ProgramIDs.Count; i++)
            {
                @Html.HiddenFor(model => model.ProgramIDs[i])
            }

            @*//Need to pass Enumerable.Empty<SelectListItem>() so GoodItemID is created as a 'select' element as opposed to an input element.*@
            <div>
                @Html.HifisEditorFor(model => model.ActivityItemID, Enumerable.Empty<SelectListItem>())
            </div>

            <div>
                <div class="row">
                    @Html.HifisLabelFor(model => model.ReasonForGoodsActivityTypeID, new { @class = "control-label col-sm-3" })
                    <div class="col-sm-9">
                        @Html.Partial("DisplayViewTemplates/_SingleItemSelectList",
                            new SingleItemSelectList
                            {
                                ID = Model.ReasonForGoodsActivityTypeID,
                                List = WebHelper.GetSelectListFromCache(CachedTableTypes.HIFIS_ReasonForGoodsActivityTypes, Culture, Model.ReasonForGoodsActivityTypeID)
                            })
                    </div>
                </div>

            </div>

            @if (Model.ProgramIDs.Count() == 0)
            {
                <div class="mrgn-bttm-sm">

                    @Html.HifisListBoxFor(model => model.ProgramIDs, ViewBag.ProgramList as SelectList)
                </div>
            }
            else
            {
                <div class="mrgn-bttm-md">
                    <div class="row">
                        @Html.HifisLabelFor(model => model.ProgramIDs, new { @class = "control-label col-sm-3" })
                        <div class="col-sm-9">
                            @Html.Partial("DisplayViewTemplates/_MultipleItemSelectList",
                                new MultipleItemSelectList
                                {
                                    IDs = Model.ProgramIDs,
                                    List = ViewBag.ProgramList as SelectList
                                })
                        </div>
                    </div>

                </div>
            }


            <div>
                @Html.HifisEditorFor(model => model.DateStart, "DateAndTime")
            </div>

            <div>
                @Html.HifisEditorFor(model => model.DateEnd, "DateAndTime")
            </div>

            <div>
                @Html.HifisEditorFor(model => model.Hours)
            </div>

            <div>
                @Html.HifisEditorFor(model => model.Minutes)
            </div>

        </form>
    </div>
    <div class="modal-footer" style="background-color: white;">

        <button type="submit" id="newServiceSaveBtn" class="saveButton">@Labels.AddNewService</button>

        <button id="serviceCloseBtn" class="btn btn-primary popup-modal-dismiss cancelButton" type="button">@Labels.Close</button>
    </div>
</section>

@if (RightsHelper.HasRight(UserRights.Goods_Services__Express_Service_Add))
{
    <text>
        <script type="text/javascript">
            $(function () {
                $.ajax({
                    url: "@Url.Action("GetServicesItemsList", "GoodsAndServices")",
                    type: "POST",
                }).done(function (data) {
                    $('#ActivityItemID').prepend('<optgroup label="@Labels.ExpressServices">' + makeOptions(data.Result.data) + '</optgroup>');
                }).always(function () {
                    reinitSelect2($('#ActivityItemID'));
                });
            });
        </script>
    </text>
}

<script type="text/javascript">

    //Get everything to display correctly
    init_hifis();
    autoWidthBoot('.modal-body');

    $('#ActivityItemID').append('<option value=""/>');

    $(function () {
        $.ajax({
            url: "@Url.Action("GetServicesTypeListJson", "GoodsAndServices")?selectedID=@Model.ActivityItemID",
            type: "POST",
        }).done(function (data) {
            $('#ActivityItemID').append('<optgroup label="@Labels.StandardServices">' + makeOptions(data.Result.data) + '</optgroup>');
        }).always(function () {
            reinitSelect2($('#ActivityItemID'));
            if ($('#ActivitiesTypeID').val() != 0) {
                var setVal = $('#ActivitiesTypeID').val() + ",T";
                $('#ActivityItemID').val(setVal);
                $('select').trigger('change');
            }
        });

         $("#serviceForm").hifisValidation();
    });

    function makeOptions(res) {
        var str = "";
        if (res.length > 0) {
            for (i = 0; i < res.length; i++) {
                str += '<option value="' + res[i].value + '">' + res[i].label + '</option>';
            }
        }
        else {
            str += '<option value="" disabled>@Labels.NoneToDisplay</option>';
        }
        return str;
    };

    function reinitSelect2(selector) {
        selector.select2('destroy');
        selector.select2({ width: 'resolve', allowClear: true, placeholder: $("#DropdownPlaceholder").val(), });
    }

    $('#ActivityItemID').on("select2:unselect", function (e) {
        $('#innerListWrapper').hide("slow");
        $('#NoResultsDiv').show('slow');
        $('#ActivitiesTypeID').val('');
        $('#Hours').val(0);
        $('#Minutes').val(0);
        $('#ServiceCost').val('');
        $('#ServicePrice').val('');
        $('select').trigger('change');
    });

    $('#ActivityItemID').on("select2:select", function (e) {
        var substrings = $(this).val().split(',');

        var Details;

        if (substrings[1] == 'D') {
            $.ajax({
                url: "@Url.Action("GetServicesItemInfo", "GoodsAndServices")",
                type: "POST",
                data: { "itemID": substrings[0] },
            }).done(function (data) {
                $('#ActivitiesTypeID').val(data.Result.data[0].typeID);
                $('#Hours').val(data.Result.data[0].hours);
                $('#Minutes').val(data.Result.data[0].minutes);
                if (data.Result.data[0].unitCost === "N/A") {
                    $('#ServiceCost').val(0);
                }
                else {
                    $('#ServiceCost').val(parseInt(data.Result.data[0].unitCost));
                }
                if (data.Result.data[0].unitCost === "N/A") {
                    $('#ServicePrice').val(0);
                }
                else {
                    $('#ServicePrice').val(parseInt(data.Result.data[0].unitPrice));
                }
            }).fail(function () {
            }).always(function () {
            });
        }
        else {
            $('#ActivitiesTypeID').val('');
            $('#Hours').val(0);
            $('#Minutes').val(0);
            $('#ServiceCost').val('');
            $('#ServicePrice').val('');
        }
    });

    $("#newServiceSaveBtn").click(function () {
        if ($("#serviceForm").valid()) {
            var btn = $(this);
            btn.attr("disabled", true); //Disable the button so multiple request don't go through

            $.ajax({
                url: "@Url.Content("~/Diversion/NewActivity")",
                type: "POST",
                data: $('#serviceForm').serialize()
            }).done(function (data)
            {

                defaultNotify(data.Success); //display the default error or success message

                btn.attr("disabled", false); //Enable the button incase there was an error

                if (data.Success)
                {
                    $("#serviceCloseBtn").click(); //Close the modal window on success
                    //todo: Need to convert datatable to ajax and call reload after adding a placement attempt.
                    console.log("FD - newServiceSaveBtn OnSuccess calling servicesTable ajax.reload");

                    var gaId = data.Result.gaID;
                    var clientid = data.Result.clientid;
                    var serviceid = data.Result.serviceid;
                    var orgid = data.Result.orgid;
                    var diversionId = data.Result.diversionID;

                    console.log("FD - " + '@Url.Content("~/GoodsAndServices/ServicesListJson?")' + 'clientID=' + clientid +
                        '&serviceID=' + serviceid + ' &goodActivityID=' + gaId + '&orgID=' + orgid + '&isServiceRestricted=' + false);

                    $('#servicesTable').DataTable().ajax.url('@Url.Content("~/GoodsAndServices/ServicesListJson?")' + 'clientID=' + clientid +
                                                             '&serviceID=' + serviceid + ' &goodActivityID=' + gaId + '&orgID=' + orgid + '&isServiceRestricted=' + false).load(null, false);
                    $('#servicesTable').DataTable().ajax.reload();

                   //update buttons with service
                    console.log("FD - newServiceSaveBtn button with serviceID : " + serviceid + " and diversionID :" + diversionId);
                    $("#addGoodBtn").attr("href", "@Url.Content("~/Diversion/NewDiversionGoods?clientID=")" + clientid + '&serviceID=' + serviceid + '&diversionID=' + diversionId);
                    $("#addActivityBtn").attr("href", "@Url.Content("~/Diversion/NewDiversionActivities?clientID=")" + clientid + '&serviceID=' + serviceid + '&diversionID=' + diversionId);




                }
            });
        }
    });

    $("#editServiceSaveBtn").click(function () {
        if ($("#serviceForm").valid()) {
            var btn = $(this);
            btn.attr("disabled", true); //Disable the button so multiple request don't go through

            $.ajax({
                url: "@Url.Content("~/Diversion/EditService")",
                type: "POST",
                data: $('#serviceForm').serialize()
            }).done(function (data) {

                defaultNotify(data.Success); //display the default error or success message

                btn.attr("disabled", false); //Enable the button incase there was an error

                if (data.Success) {
                    $("#serviceCloseBtn").click(); //Close the modal window on success
                    //todo: Need to convert datatable to ajax and call reload after adding a placement attempt.
                    $('#servicesTable').DataTable().ajax.reload();
                }
            });
        }
    });
</script>