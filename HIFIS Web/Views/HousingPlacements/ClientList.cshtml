@model HousingPlacementListViewModel
@{
    ViewBag.LayoutView = LayoutPage.Client;
    ViewBag.ViewTitle = Labels.viewTitle_PlacementList;
    
    string fullPlacementsUrl = Url.Content("~/HousingPlacements/GetPlacementsJson/?FrontDesk=False&ClientID=" + ViewBag.ClientID);
}

<p>
    <a id="openFilters" aria-controls="filter-options" class="overlay-lnk filterButton" role="button">@Labels.FilterOptions</a>
</p>

<div class="clearfix"></div>

<div class="table-responsive">
    <table id="placementsTable" class="wb-tables table table-striped table-hover" data-wb-tables='{ "columns": [
                                                                { "width": "25%", "data": "serviceProvider", "orderable": true, "type": "string", "name" : "OrganizationName"},
                                                                { "width": "13%", "data": "caseworker", "orderable": true, "type": "string", "name" : "CaseWorkerLastName"},
                                                                { "width": "12%", "data": "dateStart", "orderable": true, "type": "string", "name": "DateStart"},
                                                                { "width": "35%", "data": "status", "orderable": false, "type": "string"},
                                                                { "width": "15%", "data": "actions", "orderable": false, "type": "string"}
                                                            ],
                                                            "order": [ [2, "desc"] ],
                                                            "serverSide": true,
                                                            "processing": true,
                                                            "bFilter" : false,
                                                            "ajax": "@fullPlacementsUrl" }'>
        <thead>
            <tr>
                <th>@Labels.ServiceProvider</th>
                <th>@Labels.CaseWorker</th>
                <th>@Labels.DateSearchStarted</th>
                <th>@Labels.Status</th>
                <th>@Labels.Action</th>
            </tr>
        </thead>
        <tbody />
    </table>
</div>

<!-- Overlay Panel -->
<section id="filter-panel" class="wb-overlay modal-content overlay-def outside-off filtersSidePanel">
    <header class="modal-header">
        <h2 class="modal-title">@Labels.FilterOptions</h2>
    </header>
    <div class="modal-body">
        @Html.Partial("_PlacementSearchFilters", new PlacementSearchFilterViewModel() { FrontDesk = false, ClientID = ViewBag.ClientID })
    </div>
</section>

<br />

<p>      
    @if (RightsHelper.HasRight(UserRights.HousingPlacements_Add))
    {
        @Html.ActionLink(Labels.NewPlacement, "New", "HousingPlacements", new { id = ViewBag.ClientID }, new { @class = "addButton", alt=Labels.NewPlacement, aria_label = Labels.NewPlacement, @role = "button" })
    }
        
</p>

@using (Html.BeginScriptContext())
{
    Html.AddScriptBlock(@<script type="text/javascript">

    //open the filter panel
    $('#openFilters').on('click', function () {
        if ($("#filter-panel").hasClass('open'))
            $('#filter-panel').trigger('close.wb-overlay');
        else {
            reinitSelect2($('#CGs'));
            reinitSelect2($('#CCs'));
        }

        $('#filter-panel').trigger('open.wb-overlay');
    });

    //open the past target table
    $("#openPastTarget").on('mfpOpen', function () {
        $('#pastTargetTable').DataTable().columns.adjust();
    });

    //when the filter panel opens reinit select2s
    $(document).on('open.wb-overlay', function (event) {
        doSelect2Init();
    });

    //close filter panel
    $('#closeFilters').on('click', function () {
        $("#filter-panel").trigger("close.wb-overlay");
    });

    //reapplies container class to the large select2 drop downs
    function reinitSelect2(selector) {
        selector.select2('destroy');
        select2InitFunctions.push(function () {
            selector.select2(
            {
                allowClear: true,
                placeholder: $("#DropdownPlaceholder").val(),
                dropdownAutoWidth: true,
                containerCssClass: "custom-select2-container"
            });
        });
        doSelect2Init();
    }


    // Functions for pre-defined filters based on 'urgent' placements
    function filterFollowUps() {
        resetFilterForm();
        $('#UF').bootstrapSwitch('state', true);
        $('#filterListButton').trigger('click');
    }

    function filterUpcomingTargetDate() {
        resetFilterForm();
        $('#UTD').bootstrapSwitch('state', true);
        $('#filterListButton').trigger('click');
    }

    function filterPastTargetDate() {
        resetFilterForm();
        $('#PTD').bootstrapSwitch('state', true);
        $('#filterListButton').trigger('click');
    }

    function filterMoveInDate() {
        resetFilterForm();
        $('#PMD').bootstrapSwitch('state', true);
        $('#filterListButton').trigger('click');
    }

    // Clear the filter form before applying preset filters
    function resetFilterForm() {
        $('#placementFilterForm[type!="hidden"]').trigger("reset");
        $('#placementFilterForm').find('select').val([]).trigger('change').trigger('select2:unselect');
    }

    </script>);
}