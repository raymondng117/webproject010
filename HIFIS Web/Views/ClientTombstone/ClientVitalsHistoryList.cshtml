@model ClientHistoryChangeListViewModel
@{
    ViewBag.ViewTitle = Labels.viewTitle_ClientVitalsHistoryChange;

    ViewBag.LayoutView = LayoutPage.Client;
}

<div class="table-responsive">
    <table class="wb-tables table table-striped table-hover" data-wb-tables='{ 
           "columns": [
                                               {"width": "25%", "data": "field" },
                                               {"width": "25%", "data": "value" },
                                               {"width": "25%", "data": "dateChange" },
                                               {"width": "25%", "data": "changedBy" }
                                               
                                            ],
                                 "info": false,
                                "processing": true, 
                                "order": [[2, "desc"]] }'>
        <thead>
            <tr>
                <th>@Labels.Field</th>
                <th>@Labels.Value</th>
                <th>@Labels.DateChange</th>
                <th>@Labels.ChangedBy</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var historyChange in Model.ClientHistoryChangeList)
            {
                <tr>    
                    <td class="align-text-center">@Html.DisplayFor(model => historyChange.FieldTypeName)</td>
                    <td class="align-text-center">
                        @* TODO: This should not be done here.... -JdV *@

                        @if (historyChange.FieldTypeID == (short)ClientHistoryFieldTypes.LastName)
                        {@Html.DisplayFor(model => historyChange.Value)}
                        @if (historyChange.FieldTypeID == (short)ClientHistoryFieldTypes.FirstName)
                        {@Html.DisplayFor(model => historyChange.Value)}
                        @if (historyChange.FieldTypeID == (short)ClientHistoryFieldTypes.DateOfBirth)
                        {@Convert.ToDateTime(historyChange.Value).ToString("yyyy-MM-dd")}
                        @if (historyChange.FieldTypeID == (short)ClientHistoryFieldTypes.Gender)
                        {@WebHelper.GetTextFromCache(CachedTableTypes.HIFIS_GenderTypes, Culture, historyChange.Value)}
                        @if (historyChange.FieldTypeID == (short)ClientHistoryFieldTypes.VeteranStatus)
                        {@WebHelper.GetTextFromCache(CachedTableTypes.HIFIS_VeteranStatesTypes, Culture, historyChange.Value)}
                        @if (historyChange.FieldTypeID == (short)ClientHistoryFieldTypes.CitizenStatus)
                        {@WebHelper.GetTextFromCache(CachedTableTypes.HIFIS_CitizenshipTypes, Culture, historyChange.Value)}
                        @if (historyChange.FieldTypeID == (short)ClientHistoryFieldTypes.AboriginalStatus)
                        {@WebHelper.GetTextFromCache(CachedTableTypes.HIFIS_AboriginalIndicatorTypes, Culture, historyChange.Value)}
                        @if (historyChange.FieldTypeID == (short)ClientHistoryFieldTypes.ClientState)
                        {@WebHelper.GetTextFromCache(CachedTableTypes.HIFIS_ClientStateTypes, Culture, historyChange.Value)}
                        @if (historyChange.FieldTypeID == (short)ClientHistoryFieldTypes.Disability)
                        {@(historyChange.Value == "Y" ? Labels.Yes : Labels.No)}
                        @if (historyChange.FieldTypeID == (short)ClientHistoryFieldTypes.MedicAlert)
                        {@(historyChange.Value == "Y" ? Labels.Yes : Labels.No)}
                        @if (historyChange.FieldTypeID == (short)ClientHistoryFieldTypes.MiddleName)
                        {@Html.DisplayFor(model => historyChange.Value)}
                        @if (historyChange.FieldTypeID == (short)ClientHistoryFieldTypes.Alias1)
                        {@Html.DisplayFor(model => historyChange.Value)}
                        @if (historyChange.FieldTypeID == (short)ClientHistoryFieldTypes.Alias2)
                        {@Html.DisplayFor(model => historyChange.Value)}
                        @if (historyChange.FieldTypeID == (short)ClientHistoryFieldTypes.ClientIs)
                        {@(historyChange.Value == "Y" ? Labels.Yes : Labels.No)}
                        @if (historyChange.FieldTypeID == (short)ClientHistoryFieldTypes.ClientHousingStatus)
                        {@WebHelper.GetTextFromCache(CachedTableTypes.HIFIS_ClientHousingStatusTypes, Culture, historyChange.Value)}
                        @if (historyChange.FieldTypeID == (short)ClientHistoryFieldTypes.ChronicallyHomeless)
                        {@(historyChange.Value == "Y" ? Labels.Yes : Labels.No)}
                    </td>
                    <td class="align-text-center">@Html.DisplayFor(model => historyChange.DateOfChange)</td>
                    <td class="align-text-center">@Html.DisplayFor(model => historyChange.CreatedByName)</td>
               </tr>
            }
        </tbody>
    </table>
</div>

<div class="mrgn-tp-md">

    @if (RightsHelper.HasRight(UserRights.Client_Vitals))
    { 
        @Html.ActionLink(Labels.Back, "DisplayVitals", "ClientTombstone", new { id = Model.ClientID }, new { @class = "prevButton", alt=Labels.Back, aria_label = Labels.Back, @role = "button"  })
    }
    @if (RightsHelper.HasRight(UserRights.Client_Vitals_Edit))
    {
        @Html.ActionLink(Labels.DisplayClientStateHistory, "ClientStateHistoryList", "ClientTombstone", new { id = Model.ClientID }, new { @class = "displayButton", alt=Labels.DisplayClientStateHistory, aria_label = Labels.DisplayClientStateHistory, @role = "button"  })
    }
    @if (RightsHelper.HasRight(UserRights.Client_Activity_Log))
    {
        @Html.ActionLink(Labels.viewTitle_ClientActivityLog, "ClientActivityLogList", "ClientTombstone", new { id = Model.ClientID }, new { @class = "listButton", alt=Labels.viewTitle_ClientActivityLog, aria_label = Labels.viewTitle_ClientActivityLog, @role = "button"  })

    }
</div>
